# 풀이 1 (dp)
N = int(input())
nums = list(map(int, input().split()))
dp = [1] * N

for i in range(1, N):
    for j in range(i):
        if nums[i] > nums[j]: # 기준 nums[i] 이 커야한다
            dp[i] = max(dp[i], dp[j] + 1)

print(max(dp))


# 풀이 2 (체크할 당시의 해당 값에 대한 max 값 세팅)
input()
c = [0] * 1001  # 수열 A 의 범위가 1~1000 이므로,
for s in map(int, input().split()):
    c[s] = max(c[:s]) + 1
print(max(c))

"""
수열 A가 주어졌을 때, 가장 긴 증가하는 부분 수열을 구하는 프로그램을 작성하시오.
예를 들어, 수열 A = {10, 20, 10, 30, 20, 50} 인 경우에
가장 긴 증가하는 부분 수열은 A = {'10', '20', 10, '30', 20, '50'} 이고, 길이는 4이다.

입력
첫째 줄에 수열 A의 크기 N (1 ≤ N ≤ 1,000)이 주어진다.
둘째 줄에는 수열 A를 이루고 있는 Ai가 주어진다. (1 ≤ Ai ≤ 1,000)

ex.
6 {10, 20, 10, 30, 20, 50}
5 {5 4 3 2 1}
20 {31 84 18 62 35 77 23 53 60 94 3 77 60 51 42 18 83 85 63 51}
"""
